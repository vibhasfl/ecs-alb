Parameters:
    EnviromentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
    Stackname:
        Description: Stack name to be appended to nested security group stack
        Type: String
    Cluster:
        Description: Cluster in which aws service needs to be launched
        Type: String
    LoadBalancerListener:
        Description: The Application Load Balancer listener to register with
        Type: String
    Path:
        Description: The path to register with the Application Load Balancer
        Type: String
        Default: /users
    VPC:
        Description: Choose which VPC the security groups should be deployed to
        Type: AWS::EC2::VPC::Id
    LogGroupName:
        Description: Log group name
        Type: String



Resources:

# Should create role for ecs service register/deregister with ALB by default it assumed its created
    UserService:
        Type: AWS::ECS::Service
        DependsOn: ListenerRule
        Properties:
            ServiceName: users-service
            Cluster: !Ref Cluster
            DesiredCount: 1
            TaskDefinition: !Ref TaskDefination
            LoadBalancers:
                - ContainerName: "users-task"
                  ContainerPort: 8080
                  TargetGroupArn: !Ref TargetGroup


    TargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            Name: !Join ['-',[!Ref Stackname,'users','tg',!Ref EnviromentName]]
            VpcId: !Ref VPC
            Port: 80
            Protocol: HTTP
            HealthCheckPath: /users
            HealthCheckIntervalSeconds: 10
            HealthCheckTimeoutSeconds: 5
            HealthyThresholdCount: 2

    ListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            ListenerArn: !Ref LoadBalancerListener
            Priority: 1
            Conditions:
                - Field: path-pattern
                  Values:
                    - !Ref Path
            Actions:
                - TargetGroupArn: !Ref TargetGroup
                  Type: forward

    TaskDefination:
        Type: AWS::ECS::TaskDefinition
        Properties:
            Family: users
            ContainerDefinitions:
                - Name: users-task
                  Essential: true 
                  Image: 426216792429.dkr.ecr.us-east-1.amazonaws.com/users-microservice
                  Memory: 128
                  PortMappings:
                    - ContainerPort: 8080
                  LogConfiguration:
                      LogDriver: awslogs
                      Options:
                        awslogs-group: !Ref LogGroupName
                        awslogs-region: !Ref AWS::Region
                        awslogs-stream-prefix: users


